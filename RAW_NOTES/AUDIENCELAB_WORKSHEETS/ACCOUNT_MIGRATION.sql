-- Before) Create Warehouses: 
CREATE OR REPLACE WAREHOUSE ANALYST_WH with
warehouse_size='SMALL'
auto_suspend = 60
auto_resume = true
initially_suspended=true;

CREATE OR REPLACE WAREHOUSE AUDIENCE_WH with
warehouse_size='SMALL'
min_cluster_count=1
max_cluster_count=6
auto_suspend = 60
auto_resume = true
initially_suspended=true;

CREATE OR REPLACE WAREHOUSE DASHBOARD_WH with
warehouse_size='MEDIUM'
min_cluster_count=1
max_cluster_count=1
auto_suspend = 60
auto_resume = true
initially_suspended=true;

CREATE OR REPLACE WAREHOUSE DATALOADER with
warehouse_size='LARGE'
min_cluster_count=1
max_cluster_count=2
auto_suspend = 60
auto_resume = true
initially_suspended=true;

CREATE OR REPLACE WAREHOUSE DATALOADER_2 with
warehouse_size='LARGE'
min_cluster_count=1
max_cluster_count=2
auto_suspend = 60
auto_resume = true
initially_suspended=true;

CREATE OR REPLACE WAREHOUSE ENRICHMENT_WH with
warehouse_size='SMALL'
min_cluster_count=1
max_cluster_count=3
auto_suspend = 60
auto_resume = true
initially_suspended=true;

CREATE OR REPLACE WAREHOUSE KEYWORD_WH with
warehouse_size='SMALL'
min_cluster_count=1
max_cluster_count=3
auto_suspend = 60
auto_resume = true
initially_suspended=true;

CREATE OR REPLACE WAREHOUSE LORENZO_TEST with
warehouse_size='XSMALL'
min_cluster_count=1
max_cluster_count=1
auto_suspend = 60
auto_resume = true
initially_suspended=true;

CREATE OR REPLACE WAREHOUSE PIXEL_WH with
warehouse_size='XSMALL'
min_cluster_count=1
max_cluster_count=5
auto_suspend = 60
auto_resume = true
initially_suspended=true;



-- 0) Create Databases and Schemas:
CREATE DATABASE AUDIENCELAB_INTERNAL_PROD;
CREATE SCHEMA AUDIENCELAB_INTERNAL_PROD.RAW_DATA;


CREATE TRANSIENT DATABASE FOUR_EYES;
ALTER DATABASE FOUR_EYES
SET DATA_RETENTION_TIME_IN_DAYS=0;


CREATE TRANSIENT DATABASE STATISTICS;
ALTER DATABASE STATISTICS
SET DATA_RETENTION_TIME_IN_DAYS=0;


CREATE TRANSIENT DATABASE TROVO
ALTER DATABASE TROVO
SET DATA_RETENTION_TIME_IN_DAYS=0;
CREATE TRANSIENT SCHEMA TROVO.RAW_DATA;
ALTER SCHEMA TROVO.RAW_DATA
SET DATA_RETENTION_TIME_IN_DAYS=0;
CREATE TRANSIENT SCHEMA TROVO.TEST;
ALTER SCHEMA TROVO.TEST
SET DATA_RETENTION_TIME_IN_DAYS=0;




-- 0.4) Create FOUR_EYES_CSV_FORMAT:
CREATE OR REPLACE FILE FORMAT FOUR_EYES.PUBLIC.FOUR_EYES_CSV_FORMAT
    TYPE=CSV,
    FIELD_DELIMITER=',',
    SKIP_HEADER=1,
    NULL_IF=('NULL', 'null')
    COMPRESSION=gzip;


-- 0.45) Create STORAGE INTEGRATION objects and Stages, in the new account, for the "TROVO_ADSLAB_STAGE", FOUR_EYES_STAGE_CSV and "AUDIENCELAB_BACKUP_STAGE" (FOUR_EYES_INTEGRATION):

CREATE OR REPLACE STORAGE INTEGRATION FOUR_EYES_INTEGRATION
    TYPE=EXTERNAL_STAGE
    STORAGE_PROVIDER=S3
    ENABLED=TRUE
    STORAGE_AWS_ROLE_ARN='' -- a "snowflake" dedicated IAM user is needed, in AWS, to utilize this value
    STORAGE_ALLOWED_LOCATIONS=('');

CREATE OR REPLACE STORAGE INTEGRATION S3_INTEGRATION 
    TYPE=EXTERNAL_STAGE 
    STORAGE_PROVIDER='S3' 
    STORAGE_AWS_ROLE_ARN='' 
    STORAGE_AWS_EXTERNAL_ID='' 
    ENABLED=true 
    STORAGE_ALLOWED_LOCATIONS=('', '', '');

-- 0.5) Create Backup Stage and FOUR_EYES_STAGE_CSV:

CREATE OR REPLACE STAGE FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE
    url='s3://audiencelab-4eyes/audiencelab_backup/'
    STORAGE_INTEGRATION=FOUR_EYES_INTEGRATION
    FILE_FORMAT=(
        FORMAT_NAME='FOUR_EYES.PUBLIC.FOUR_EYES_CSV_FORMAT'
    );

CREATE OR REPLACE STAGE FOUR_EYES.PUBLIC.FOUR_EYES_STAGE_CSV
    url='s3://audiencelab-4eyes/AIGDS/'
    STORAGE_INTEGRATION=FOUR_EYES_INTEGRATION
    FILE_FORMAT=(
        FORMAT_NAME='FOUR_EYES.PUBLIC.FOUR_EYES_CSV_FORMAT'
    );


-- 0.6) Create USERS:

USE ROLE SYSADMIN;

CREATE OR REPLACE USER AUDIENCEUSER;

CREATE OR REPLACE USER ENRICHMENTUSER;

CREATE OR REPLACE USER KEYWORDUSER;

CREATE OR REPLACE USER STAGINGPIXEL;

CREATE OR REPLACE USER LORENZO;

CREATE OR REPLACE USER YAPHOA001;

CREATE OR REPLACE USER ARTHUR;

-- 0.7) Create ROLES with access to objects:

CREATE OR REPLACE ROLE PIXEL_AGENT;

CREATE OR REPLACE ROLE STATISTICS_USER;

-- 0.8) Grant PRIVILEGES TO ROLES:

-- PIXEL_AGENT:
GRANT USAGE ON DATABASE AUDIENCELAB_INTERNAL_PROD TO ROLE PIXEL_AGENT;
GRANT USAGE ON DATABASE TROVO TO ROLE PIXEL_AGENT;
GRANT USAGE ON DATABASE FOUR_EYES TO ROLE PIXEL_AGENT;

GRANT USAGE ON SCHEMA AUDIENCELAB_INTERNAL_PROD.PUBLIC TO ROLE PIXEL_AGENT;
GRANT USAGE ON SCHEMA TROVO.PUBLIC TO ROLE PIXEL_AGENT;
GRANT USAGE ON SCHEMA FOUR_EYES.PUBLIC TO ROLE PIXEL_AGENT;

GRANT USAGE ON ALL TABLES IN SCHEMA AUDIENCELAB_INTERNAL_PROD.PUBLIC TO ROLE PIXEL_AGENT;
GRANT USAGE ON ALL TABLES IN SCHEMA TROVO.PUBLIC TO ROLE PIXEL_AGENT;
GRANT USAGE ON ALL TABLES IN SCHEMA FOUR_EYES.PUBLIC TO ROLE PIXEL_AGENT;

GRANT SELECT ON ALL TABLES IN SCHEMA AUDIENCELAB_INTERNAL_PROD.PUBLIC TO ROLE PIXEL_AGENT;
GRANT SELECT ON ALL TABLES IN SCHEMA TROVO.PUBLIC TO ROLE PIXEL_AGENT;
GRANT SELECT ON ALL TABLES IN SCHEMA FOUR_EYES.PUBLIC TO ROLE PIXEL_AGENT;

GRANT SELECT ON FUTURE TABLES IN SCHEMA AUDIENCELAB_INTERNAL_PROD.PUBLIC TO ROLE PIXEL_AGENT;
GRANT SELECT ON FUTURE TABLES IN SCHEMA TROVO.PUBLIC TO ROLE PIXEL_AGENT;
GRANT SELECT ON FUTURE TABLES IN SCHEMA FOUR_EYES.PUBLIC TO ROLE PIXEL_AGENT;

-- STATISTICS USER:
GRANT USAGE ON DATABASE STATISTICS TO ROLE STATISTICS_USER;

GRANT USAGE ON SCHEMA STATISTICS.PUBLIC TO ROLE STATISTICS_USER;

GRANT USAGE ON ALL TABLES IN SCHEMA STATISTICS.PUBLIC TO ROLE STATISTICS_USER;

GRANT SELECT ON ALL TABLES IN SCHEMA STATISTICS.PUBLIC TO ROLE STATISTICS_USER;

GRANT SELECT ON FUTURE TABLES IN SCHEMA STATISTICS.PUBLIC TO ROLE STATISTICS_USER;



-- 0.9) Assign ROLES to USERS:

GRANT PIXEL_AGENT ROLE TO USER STAGINGPIXEL;

GRANT STATISTICS_USER ROLE TO USER STATISTICS_USER;




-- 1) Create Backups of Snowflake data in S3:


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON:
COPY INTO @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/universal_person/
FROM (
    SELECT * FROM AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON
      );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.CONSUMER_B2C_FULL:
COPY INTO @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/consumer_b2c_full/
FROM (
    SELECT * FROM AUDIENCELAB_INTERNAL_PROD.PUBLIC.CONSUMER_B2C_FULL
      );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.B2B_EXPORT_TROVO:
-- COPY INTO @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/b2b_export_trovo/
-- FROM (
--     SELECT * FROM AUDIENCELAB_INTERNAL_PROD.PUBLIC.B2B_EXPORT_TROVO
--       );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.KEYWORD_PLANNER:
-- COPY INTO @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/keyword_planner/
-- FROM (
--     SELECT * FROM AUDIENCELAB_INTERNAL_PROD.PUBLIC.KEYWORD_PLANNER
--       );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.PREMADE_TAXONOMY:
-- COPY INTO @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/premade_taxonomy/
-- FROM (
--     SELECT * FROM AUDIENCELAB_INTERNAL_PROD.PUBLIC.PREMADE_TAXONOMY
--       );

-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.ST_CONSUMER:
-- COPY INTO @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/st_consumer/
-- FROM (
--     SELECT * FROM AUDIENCELAB_INTERNAL_PROD.PUBLIC.ST_CONSUMER
--       );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.TROVO_FEED_RESOLVED (External Table, needs @AUDIENCELAB_INTERNAL_PROD.RAW_DATA.TROVO_ADSLAB_STAGE stage with this URL: s3://trovo-coop-adslab/outgoing/cookie_sync/resolved/):
CREATE OR REPLACE EXTERNAL TABLE 
AUDIENCELAB_INTERNAL_PROD.RAW_DATA.TROVO_FEED_RESOLVED 
(
TROVO_ID VARCHAR(16777216) AS (CAST(GET(VALUE, 'TROVO_ID') AS VARCHAR(16777216))), 
PARTNER_ID VARCHAR(16777216) AS (CAST(GET(VALUE, 'PARTNER_ID') AS VARCHAR(16777216))),
PARTNER_UID VARCHAR(16777216) AS (CAST(GET(VALUE, 'PARTNER_UID') AS VARCHAR(16777216))), 
SHA256_LOWER_CASE VARCHAR(16777216) AS (CAST(GET(VALUE, 'SHA256_LOWER_CASE') AS VARCHAR(16777216))), 
IP VARCHAR(16777216) AS (CAST(GET(VALUE, 'IP') AS VARCHAR(16777216))), 
JSON_HEADERS VARCHAR(16777216) AS (CAST(GET(VALUE, 'JSON_HEADERS') AS VARCHAR(16777216))), 
EVENT_DATE TIMESTAMP_NTZ(9) AS (CAST(GET(VALUE, 'EVENT_DATE') AS TIMESTAMP_NTZ(9))), 
INGESTION_TIMESTAMP TIMESTAMP_NTZ(9) AS (CAST(CONCAT(SUBSTR(METADATA$FILENAME, 33, 4), '-', SUBSTR(METADATA$FILENAME, 40, 2), '-', SUBSTR(METADATA$FILENAME, 45, 2), ' ', SUBSTR(METADATA$FILENAME, 50, 2), ':', SUBSTR(METADATA$FILENAME, 55, 2), ':0', SUBSTR(METADATA$FILENAME, 58, 1)) AS TIMESTAMP_NTZ(9))))
LOCATION=@TROVO_ADSLAB_STAGE/cookie_sync/resolved/ 
pattern='.*.parquet' 
file_format=(TYPE=PARQUET NULL_IF=()) ;


-- FOUR_EYES.PUBLIC.PREMADE_4EYES_LITE:
COPY INTO @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/premade_4eyes_lite/
FROM (
    SELECT * FROM FOUR_EYES.PUBLIC.PREMADE_4EYES_LITE
      );


-- FOUR_EYES.PUBLIC.SHA_TO_UPS
COPY INTO @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/sha_to_ups/
FROM (
    SELECT * FROM FOUR_EYES.PUBLIC.SHA_TO_UPS
      );




-- 2) Create Snowflake Tables, in the new account, using the data that was copied into S3:



-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON:
CREATE OR REPLACE TABLE AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON CLUSTER by (EXACT_AGE)(
	ID NUMBER(38,0),
	FIRST_NAME VARCHAR(16777216),
	LAST_NAME VARCHAR(16777216),
	BUSINESS_EMAIL VARCHAR(16777216),
	SHA256_BUSINESS_EMAIL VARCHAR(16777216),
	PROGRAMMATIC_BUSINESS_EMAILS VARCHAR(16777216),
	MOBILE_PHONE VARCHAR(16777216),
	DIRECT_NUMBER VARCHAR(16777216),
	PERSONAL_PHONE VARCHAR(16777216),
	LINKEDIN_URL VARCHAR(16777216),
	PERSONAL_ADDRESS VARCHAR(16777216),
	PERSONAL_ADDRESS_2 VARCHAR(16777216),
	PERSONAL_CITY VARCHAR(16777216),
	PERSONAL_STATE VARCHAR(16777216),
	PERSONAL_ZIP VARCHAR(16777216),
	PERSONAL_ZIP4 VARCHAR(16777216),
	PERSONAL_EMAIL VARCHAR(16777216),
	SHA256_PERSONAL_EMAIL VARCHAR(16777216),
	ADDITIONAL_PERSONAL_EMAILS VARCHAR(16777216),
	GENDER VARCHAR(16777216),
	AGE_RANGE VARCHAR(16777216),
	MARRIED VARCHAR(16777216),
	CHILDREN VARCHAR(16777216),
	INCOME_RANGE VARCHAR(16777216),
	NET_WORTH VARCHAR(16777216),
	HOMEOWNER VARCHAR(16777216),
	JOB_TITLE VARCHAR(16777216),
	SENIORITY_LEVEL VARCHAR(16777216),
	DEPARTMENT VARCHAR(16777216),
	PROFESSIONAL_ADDRESS VARCHAR(16777216),
	PROFESSIONAL_ADDRESS2 VARCHAR(16777216),
	PROFESSIONAL_CITY VARCHAR(16777216),
	PROFESSIONAL_STATE VARCHAR(16777216),
	PROFESSIONAL_ZIP VARCHAR(16777216),
	PROFESSIONAL_ZIP4 VARCHAR(16777216),
	COMPANY_NAME VARCHAR(16777216),
	COMPANY_DOMAIN VARCHAR(16777216),
	COMPANY_PHONE VARCHAR(16777216),
	COMPANY_SIC VARCHAR(16777216),
	COMPANY_ADDRESS VARCHAR(16777216),
	COMPANY_CITY VARCHAR(16777216),
	COMPANY_STATE VARCHAR(16777216),
	COMPANY_ZIP VARCHAR(16777216),
	COMPANY_LINKEDIN_URL VARCHAR(16777216),
	COMPANY_REVENUE VARCHAR(16777216),
	COMPANY_EMPLOYEE_COUNT VARCHAR(16777216),
	PRIMARY_INDUSTRY VARCHAR(16777216),
	BUSINESS_EMAIL_VALIDATION_STATUS VARCHAR(16777216),
	BUSINES_EMAIL_LAST_SEEN TIMESTAMP_NTZ(9),
	PERSONAL_EMAIL_LAST_SEEN_VALIDATION_STATUS VARCHAR(16777216),
	PERSONAL_EMAIL_LAST_SEEN TIMESTAMP_NTZ(9),
	COMPANY_LAST_UPDATED TIMESTAMP_NTZ(9),
	JOB_TITLE_LAST_UPDATED TIMESTAMP_NTZ(9),
	LAST_UPDATED TIMESTAMP_NTZ(9),
	COMPANY_DESCRIPTIONS VARCHAR(16777216),
	RELATED_DOMAINS VARCHAR(16777216),
	DIRECT_NUMBER_DNC_FLAG VARCHAR(16777216),
	PERSONAL_PHONE_DNC_FLAG VARCHAR(16777216),
	MOBILE_PHONE_DNC_FLAG VARCHAR(16777216),
	COMPANY_PHONE_DNC_FLAG VARCHAR(16777216),
	CREDIT_RATING VARCHAR(16777216),
	EXACT_AGE NUMBER(38,0),
	UP_ID VARCHAR(16777216)
);

-- Fill AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON with data:
    COPY INTO AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON
    FROM (
        SELECT 
        CAST(T.$1 AS NUMBER)  AS ID,
        T.$2 AS FIRST_NAME,
        T.$3 AS LAST_NAME,
        T.$4 AS BUSINESS_EMAIL,
        T.$5 AS SHA256_BUSINESS_EMAIL,
        T.$6 AS PROGRAMMATIC_BUSINESS_EMAILS,
        T.$7 AS MOBILE_PHONE,
        T.$8 AS DIRECT_NUMBER,
        T.$9 AS PERSONAL_PHONE,
        T.$10 AS LINKEDIN_URL,
        T.$11 AS PERSONAL_ADDRESS,
        T.$12 AS PERSONAL_ADDRESS_2,
        T.$13 AS PERSONAL_CITY,
        T.$14 AS PERSONAL_STATE,
        T.$15 AS PERSONAL_ZIP,
        T.$16 AS PERSONAL_ZIP4,
        T.$17 AS PERSONAL_EMAIL,
        T.$18 AS SHA256_PERSONAL_EMAIL,
        T.$19 AS ADDITIONAL_PERSONAL_EMAILS,
        T.$20 AS GENDER,
        T.$21 AS AGE_RANGE,
        T.$22 AS MARRIED,
        T.$23 AS CHILDREN,
        T.$24 AS INCOME_RANGE,
        T.$25 AS NET_WORTH,
        T.$26 AS HOMEOWNER,
        T.$27 AS JOB_TITLE,
        T.$28 AS SENIORITY_LEVEL,
        T.$29 AS DEPARTMENT,
        T.$30 AS PROFESSIONAL_ADDRESS,
        T.$31 AS PROFESSIONAL_ADDRESS2,
        T.$32 AS PROFESSIONAL_CITY,
        T.$33 AS PROFESSIONAL_STATE,
        T.$34 AS PROFESSIONAL_ZIP,
        T.$35 AS PROFESSIONAL_ZIP4,
        T.$36 AS COMPANY_NAME,
        T.$37 AS COMPANY_DOMAIN,
        T.$38 AS COMPANY_PHONE,
        T.$39 AS COMPANY_SIC,
        T.$40 AS COMPANY_ADDRESS,
        T.$41 AS COMPANY_CITY,
        T.$42 AS COMPANY_STATE,
        T.$43 AS COMPANY_ZIP,
        T.$44 AS COMPANY_LINKEDIN_URL,
        T.$45 AS COMPANY_REVENUE,
        T.$46 AS COMPANY_EMPLOYEE_COUNT,
        T.$47 AS PRIMARY_INDUSTRY,
        T.$48 AS BUSINESS_EMAIL_VALIDATION_STATUS,
        TO_TIMESTAMP(T.$49) AS BUSINESS_EMAIL_LAST_SEEN, -- date
        T.$50 AS PERSONAL_EMAIL_LAST_SEEN_VALIDATION_STATUS,
        TO_TIMESTAMP(T.$51) AS PERSONAL_EMAIL_LAST_SEEN, -- date
        TO_TIMESTAMP(T.$52) AS COMPANY_LAST_UPDATED, -- date
        TO_TIMESTAMP(T.$53) AS JOB_TITLE_LAST_UPDATED, -- date
        TO_TIMESTAMP(T.$54) AS LAST_UPDATED, -- date
        T.$55 AS COMPANY_DESCRIPTIONS, 
        T.$56 AS RELATED DOMAINS,
        T.$57 AS DIRECT_NUMBER_DNC_FLAG,
        T.$58 AS PERSONAL_PHONE_DNC_FLAG,
        T.$59 AS MOBILE_PHONE_DNC_FLAG,
        T.$60 AS COMPANY_PHONE_DNC_FLAG,
        T.$61 AS CREDIT_RATING,
        CAST(T.$62 AS NUMBER) AS EXACT_AGE,
        T.$63 AS UP_ID
        FROM @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/universal_person AS T
    );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.CONSUMER_B2C_FULL:
CREATE OR REPLACE TABLE AUDIENCELAB_INTERNAL_PROD.PUBLIC.CONSUMER_B2C_FULL CLUSTER by (EXACT_AGE)(
	ID NUMBER(38,0),
	FIRST_NAME VARCHAR(16777216),
	LAST_NAME VARCHAR(16777216),
	PERSONAL_EMAIL VARCHAR(16777216),
	SHA256_PERSONAL_EMAIL VARCHAR(16777216),
	ADDITIONAL_PERSONAL_EMAILS VARCHAR(16777216),
	ADDRESS VARCHAR(16777216),
	ADDRESS_2 VARCHAR(16777216),
	LATITUDE VARCHAR(16777216),
	LONGITUDE VARCHAR(16777216),
	MOBILE_PHONE VARCHAR(16777216),
	PERSONAL_PHONE VARCHAR(16777216),
	DPV_CODE VARCHAR(16777216),
	GENDER VARCHAR(16777216),
	AGE_RANGE VARCHAR(16777216),
	MARRIED VARCHAR(16777216),
	CHILDREN VARCHAR(16777216),
	INCOME_RANGE VARCHAR(16777216),
	NET_WORTH VARCHAR(16777216),
	HOME_OWNER VARCHAR(16777216),
	PERSONAL_EMAIL_LAST_SEEN_VALIDATION_STATUS VARCHAR(16777216),
	PERSONAL_EMAIL_LAST_SEEN TIMESTAMP_NTZ(9),
	CONSUMER_ADDRESS VARCHAR(16777216),
	ADULTS_F_18_24 VARCHAR(16777216),
	ADULTS_F_25_34 VARCHAR(16777216),
	ADULTS_F_35_44 VARCHAR(16777216),
	ADULTS_F_45_54 VARCHAR(16777216),
	ADULTS_F_55_64 VARCHAR(16777216),
	ADULTS_F_65_74 VARCHAR(16777216),
	ADULTS_F_75PLUS VARCHAR(16777216),
	ADULTS_M_18_24 VARCHAR(16777216),
	ADULTS_M_25_34 VARCHAR(16777216),
	ADULTS_M_35_44 VARCHAR(16777216),
	ADULTS_M_45_54 VARCHAR(16777216),
	ADULTS_M_55_64 VARCHAR(16777216),
	ADULTS_M_65_74 VARCHAR(16777216),
	ADULTS_M_75PLUS VARCHAR(16777216),
	ADULTS_U_18_24 VARCHAR(16777216),
	ADULTS_U_25_34 VARCHAR(16777216),
	ADULTS_U_35_44 VARCHAR(16777216),
	ADULTS_U_45_54 VARCHAR(16777216),
	ADULTS_U_55_64 VARCHAR(16777216),
	ADULTS_U_65_74 VARCHAR(16777216),
	ADULTS_U_75PLUS VARCHAR(16777216),
	AUTO_BODY_TYPE VARCHAR(16777216),
	AUTO_DEF_ENGINE_CYLINDERS VARCHAR(16777216),
	AUTO_DEF_TRANS_TYPE VARCHAR(16777216),
	AUTO_FUEL_TYPE VARCHAR(16777216),
	AUTO_GVW_RANGE VARCHAR(16777216),
	AUTO_MAKE VARCHAR(16777216),
	AUTO_MFG_CODE VARCHAR(16777216),
	AUTO_MSRP NUMBER(38,0),
	AUTO_STYLE VARCHAR(16777216),
	AUTO_VEHICLE_TYPE VARCHAR(16777216),
	AUTO_VIN_ VARCHAR(16777216),
	AUTO_YEAR_ VARCHAR(16777216),
	AUTOALARMTYPE VARCHAR(16777216),
	AUTOANNUALMILES VARCHAR(16777216),
	AUTOCOMMUTEDISTANCE VARCHAR(16777216),
	AUTOHASABS VARCHAR(16777216),
	AUTOHASAIRBAGS VARCHAR(16777216),
	AUTOINSBODILYINJURYCOVERAGE VARCHAR(16777216),
	AUTOINSCOLLISIONDEDUCTIBLE VARCHAR(16777216),
	AUTOINSCOMPREHENSIVEDEDUCTIBLE VARCHAR(16777216),
	AUTOINSCOVERAGETYPE VARCHAR(16777216),
	AUTOINSCOVERAGETYPEREQUESTED VARCHAR(16777216),
	AUTOINSPROPERTYDAMAGECOVERAGE VARCHAR(16777216),
	AUTOMAKE VARCHAR(16777216),
	AUTOPRIMARYUSE VARCHAR(16777216),
	AUTOYEAR VARCHAR(16777216),
	CC_AMEX_PREM VARCHAR(16777216),
	CC_AMEX_REG VARCHAR(16777216),
	CC_BANK_CD_IN_HH VARCHAR(16777216),
	CC_DISC_PREM VARCHAR(16777216),
	CC_DISC_REG VARCHAR(16777216),
	CC_GAS_PREM VARCHAR(16777216),
	CC_GAS_REG VARCHAR(16777216),
	CC_HLDR_BANK VARCHAR(16777216),
	CC_HLDR_GAS VARCHAR(16777216),
	CC_HLDR_PREM VARCHAR(16777216),
	CC_HLDR_TE VARCHAR(16777216),
	CC_HLDR_UNK VARCHAR(16777216),
	CC_HLDR_UPS_DEPT VARCHAR(16777216),
	CC_MC_PREM VARCHAR(16777216),
	CC_MC_REG VARCHAR(16777216),
	CC_NEW_ISSUE VARCHAR(16777216),
	CC_USER VARCHAR(16777216),
	CC_VISA_PREM VARCHAR(16777216),
	CC_VISA_REG VARCHAR(16777216),
	CENSUS_BLOCK_GROUP VARCHAR(16777216),
	CENSUS_TRACT VARCHAR(16777216),
	CITY VARCHAR(16777216),
	CREDIT_LINES VARCHAR(16777216),
	CREDIT_RANGE_NEW VARCHAR(16777216),
	CREDIT_RATING VARCHAR(16777216),
	DOB_DAY VARCHAR(16777216),
	DOB_MON VARCHAR(16777216),
	DOB_YR VARCHAR(16777216),
	DOMAIN VARCHAR(16777216),
	DONR_ANIMAL VARCHAR(16777216),
	DONR_ARTS VARCHAR(16777216),
	DONR_CHARITABLE VARCHAR(16777216),
	DONR_COMM_CHAR VARCHAR(16777216),
	DONR_ENVIRON VARCHAR(16777216),
	DONR_HEALTH VARCHAR(16777216),
	DONR_INTL_AID VARCHAR(16777216),
	DONR_KIDS VARCHAR(16777216),
	DONR_MAIL_ORD VARCHAR(16777216),
	DONR_OTH VARCHAR(16777216),
	DONR_POL VARCHAR(16777216),
	DONR_POL_CONS VARCHAR(16777216),
	DONR_POL_LIB VARCHAR(16777216),
	DONR_RELIG VARCHAR(16777216),
	DONR_VETS VARCHAR(16777216),
	DONR_WILDLIFE VARCHAR(16777216),
	DRIVERSLICENSEEVERREVOKED VARCHAR(16777216),
	DRIVERSLICENSESTATE VARCHAR(16777216),
	DWELL_TYPE VARCHAR(16777216),
	EDUCATION_LEVEL VARCHAR(16777216),
	ETHNIC_ASSIM VARCHAR(16777216),
	ETHNIC_CONF VARCHAR(16777216),
	ETHNIC_GRP VARCHAR(16777216),
	ETHNIC_HISP_CNTRY VARCHAR(16777216),
	ETHNIC_LANG VARCHAR(16777216),
	ETHNIC_RELIG VARCHAR(16777216),
	EXACT_AGE NUMBER(38,0),
	FIPS_STATE_CODE VARCHAR(16777216),
	GENERATIONS VARCHAR(16777216),
	GENL_PP_HOME_VALUE NUMBER(38,0),
	HH_INCOME VARCHAR(16777216),
	HH_MARITAL_STATUS VARCHAR(16777216),
	INVEST_ACT VARCHAR(16777216),
	INVEST_FOREIGN VARCHAR(16777216),
	INVEST_MONEY_SEEKR VARCHAR(16777216),
	INVEST_PERS VARCHAR(16777216),
	INVEST_READ_FIN_NEWS VARCHAR(16777216),
	INVEST_RL_EST VARCHAR(16777216),
	INVEST_STOCKS VARCHAR(16777216),
	KIDS_F_0_2 VARCHAR(16777216),
	KIDS_F_11_15 VARCHAR(16777216),
	KIDS_F_16_17 VARCHAR(16777216),
	KIDS_F_3_5 VARCHAR(16777216),
	KIDS_F_6_10 VARCHAR(16777216),
	KIDS_M_0_2 VARCHAR(16777216),
	KIDS_M_11_15 VARCHAR(16777216),
	KIDS_M_16_17 VARCHAR(16777216),
	KIDS_M_3_5 VARCHAR(16777216),
	KIDS_M_6_10 VARCHAR(16777216),
	KIDS_U_0_2 VARCHAR(16777216),
	KIDS_U_11_15 VARCHAR(16777216),
	KIDS_U_16_17 VARCHAR(16777216),
	KIDS_U_3_5 VARCHAR(16777216),
	KIDS_U_6_10 VARCHAR(16777216),
	LENGTH_OF_RESIDENCE NUMBER(38,0),
	MAGS VARCHAR(16777216),
	MOTORCYCLE_DATE TIMESTAMP_NTZ(9),
	MOTORCYCLE_MODEL VARCHAR(16777216),
	MOTORCYCLE_VIN VARCHAR(16777216),
	MR_LENDR_CD VARCHAR(16777216),
	MR_LOAN_TYP VARCHAR(16777216),
	MR2_AMT VARCHAR(16777216),
	MR2_LENDR VARCHAR(16777216),
	MR2_LENDR_CD VARCHAR(16777216),
	MR2_LOAN_TYP VARCHAR(16777216),
	MR2_RATE_TYP VARCHAR(16777216),
	NAME_SUFFIX VARCHAR(16777216),
	NUM_ADULTS VARCHAR(16777216),
	NUM_KIDS VARCHAR(16777216),
	OCC_AFRIC_AMER_PROF VARCHAR(16777216),
	OCC_BUSN_OWNR VARCHAR(16777216),
	OCC_HOME_OFF VARCHAR(16777216),
	OCC_SOHO_IND VARCHAR(16777216),
	OCC_WORKING_WMN VARCHAR(16777216),
	OPTIN_DATE TIMESTAMP_NTZ(9),
	P2_AMT VARCHAR(16777216),
	P2_LOAN_TYP VARCHAR(16777216),
	P2_RATE_TYP VARCHAR(16777216),
	PARTY_AFFILIATION VARCHAR(16777216),
	PAYDAY_EMPLOYER_NAME VARCHAR(16777216),
	PAYDAY_EMPLOYMENT_STATUS VARCHAR(16777216),
	PAYDAY_FLAG VARCHAR(16777216),
	PAYDAY_LOAN_REQUESTED_AMT VARCHAR(16777216),
	PAYDAY_MILITARY_FLAG VARCHAR(16777216),
	PAYDAY_OCCUPATION VARCHAR(16777216),
	PRES_KIDS VARCHAR(16777216),
	PROP_AC VARCHAR(16777216),
	PROP_FUEL VARCHAR(16777216),
	PROP_POOL VARCHAR(16777216),
	PROP_SEWER VARCHAR(16777216),
	PROP_TYPE VARCHAR(16777216),
	PROP_WATER VARCHAR(16777216),
	SINGLE_PARENT VARCHAR(16777216),
	SR_ADULT_IN_HH VARCHAR(16777216),
	STATE VARCHAR(16777216),
	URL VARCHAR(16777216),
	VET_IN_HH VARCHAR(16777216),
	WALK_SEQUENCE_CODE VARCHAR(16777216),
	YOUNG_ADULT_IN_HH VARCHAR(16777216),
	ZIP VARCHAR(16777216),
	ZIP4 VARCHAR(16777216),
	PERSONAL_PHONE_DNC_FLAG VARCHAR(16777216),
	MOBILE_PHONE_DNC_FLAG VARCHAR(16777216),
	UP_ID VARCHAR(16777216)
);

-- Fill AUDIENCELAB_INTERNAL_PROD.PUBLIC.CONSUMER_B2C_FULL with data:
    COPY INTO AUDIENCELAB_INTERNAL_PROD.PUBLIC.CONSUMER_B2C_FULL
    FROM 
    (
        SELECT 
        CAST(T.$1 AS NUMBER)  AS ID,
        T.$2 AS FIRST_NAME,
        T.$3 AS LAST_NAME,
        T.$4 AS PERSONAL_EMAIL,
        T.$5 AS SHA256_PERSONAL_EMAIL,
        T.$6 AS ADDITIONAL_PERSONAL_EMAILS,
        T.$7 AS ADDRESS,
        T.$8 AS ADDRESS_2,
        T.$9 AS LATITUDE,
        T.$10 AS LONGITUDE,
        T.$11 AS MOBILE_PHONE,
        T.$12 AS PERSONAL_PHONE,
        T.$13 AS DPV_CODE,
        T.$14 AS GENDER,
        T.$15 AS AGE_RANGE,
        T.$16 AS MARRIED,
        T.$17 AS CHILDREN,
        T.$18 AS INCOME_RANGE,
        T.$19 AS NET_WORTH,
        T.$20 AS HOMEOWNER,
        T.$21 AS PERSONAL_EMAIL_LAST_SEEN_VALIDATION_STATUS,
        TO_TIMESTAMP(T.$22) AS PERSONAL_EMAIL_LAST_SEEN,
        T.$23 AS CONSUMER_ADDRESS,
        T.$24 AS ADULTS_F_18_24,
        T.$25 AS ADULTS_F_25_34,
        T.$26 AS ADULTS_F_35_44,
        T.$27 AS ADULTS_F_45_54,
        T.$28 AS ADULTS_F_55_64,
        T.$28 AS ADULTS_F_65_74,
        T.$29 AS ADULTS_F_75PLUS,
        T.$30 AS ADULTS_M_18_24,
        T.$31 AS ADULTS_M_25_34,
        T.$32 AS ADULTS_M_35_44,
        T.$33 AS ADULTS_M_45_54,
        T.$34 AS ADULTS_M_55_64,
        T.$35 AS ADULTS_M_65_74,
        T.$36 AS ADULTS_M_75PLUS,
        T.$37 AS AUTO_BODY_TYPE,
        T.$38 AS AUTO_DEF_ENGINE_CYLINDERS,
        T.$39 AS AUTO_DEF_TRANS_TYPE,
        T.$40 AS AUTO_FUEL_TYPE,
        T.$41 AS AUTO_GVW_RANGE,
        T.$42 AS AUTO_MAKE,
        T.$43 AS AUTO_MFG_CODE,
        CAST(T.$44 AS NUMBER) AS AUTO_MSRP,
        T.$45 AS AUTO_STYLE,
        T.$46 AS AUTO_VEHICLE_TYPE,
        T.$47 AS AUTO_VIN_,
        T.$48 AS AUTO_YEAR_,
        T.$49 AS AUTOALARMTYPE,
        T.$50 AS AUTOANNUALMILES,
        T.$51 AS AUTOCOMMUTEDISTANCE,
        T.$52 AS AUTOHASABS,
        T.$53 AS AUTOHASAIRBAGS,
        T.$54 AS AUTOINSBODILYINJURYCOVERAGE,
        T.$55 AS AUTOINSCOLLISIONDEDUCTIBLE,
        T.$56 AS AUTOINSCOMPREHENSIVEDEDUCTIBLE,
        T.$57 AS AUTOINSCOVERAGETYPE,
        T.$58 AS AUTOINSCOVERAGETYPEREQUESTED,
        T.$59 AS AUTOINSPROPERTYDAMAGECOVERAGE,
        T.$60 AS AUTOMAKE,
        T.$61 AS AUTOPRIMARYUSE,
        T.$62 AS AUTOYEAR,
        T.$63 AS CC_AMEX_PREM,
        T.$64 AS CC_AMEX_REG,
        T.$65 AS CC_BANK_CD_IN_HH,
        T.$66 AS CC_DISC_PREM,
        T.$67 AS CC_DISC_REG,
        T.$68 AS CC_GAS_PREM,
        T.$69 AS CC_GAS_REG,
        T.$70 AS CC_HLDR_BANK,
        T.$71 AS CC_HLDR_GAS,
        T.$72 AS CC_HLDR_PREM,
        T.$73 AS CC_HLDR_TE,
        T.$74 AS CC_HLDR_UNK,
        T.$75 AS CC_HLDR_UPS_DEPT,
        T.$76 AS CC_MC_PREM,
        T.$77 AS CC_MC_REG,
        T.$78 AS CC_NEW_ISSUE,
        T.$79 AS CC_USER,
        T.$80 AS CC_VISA_PREM,
        T.$81 AS CC_VISA_REG,
        T.$82 AS CENSUS_BLOCK_GROUP,
        T.$83 AS CENSUS_TRACT,
        T.$84 AS CITY,
        T.$85 AS CREDIT_LINES,
        T.$86 AS CREDIT_RANGE_NEW,
        T.$87 AS CREDIT_RATING,
        T.$88 AS DOB_DAY,
        T.$89 AS DOB_MONTH,
        T.$90 AS DOB_YR,
        T.$91 AS DOMAIN,
        T.$92 AS DONR_ANIMAL,
        T.$93 AS DONR_ARTS,
        T.$94 AS DONR_CHARITABLE,
        T.$95 AS DONR_COMM_CHAR,
        T.$96 AS DONR_ENVIRON,
        T.$97 AS DONR_HEALTH,
        T.$98 AS DONR_INTL_AID,
        T.$99 AS DONR_KIDS,
        T.$100 AS DONR_MAIL_ORD,
        T.$101 AS DONR_OTH,
        T.$102 AS DONR_POL,
        T.$103 AS DONR_POL_CONS,
        T.$104 AS DONR_POL_LIB,
        T.$105 AS DONR_RELIG,
        T.$106 AS DONR_VETS,
        T.$107 AS DONR_WILDLIFE,
        T.$108 AS DRIVERSLICENSEEVERREVOKED,
        T.$109 AS DRIVERSLICENSESTATE,
        T.$110 AS DWELL_TYPE,
        T.$111 AS EDUCATION_LEVEL,
        T.$112 AS ETHNIC_ASSIM,
        T.$113 AS ETHNIC_CONF,
        T.$114 AS ETHNIC_GRP,
        T.$115 AS ETHNIC_HISP_CNTRY,
        T.$116 AS ETHNIC_LANG,
        T.$117 AS ETHNIC_RELIG,
        CAST(T.$118 AS NUMBER) AS EXACT_AGE,
        T.$119 AS FIPS_STATE_CODE,
        T.$120 AS GENERATIONS,
        T.$121 AS GENL_PP_HOME_VALUE,
        T.$122 AS HH_INCOME,
        T.$123 AS HH_MARITAL_STATUS,
        T.$124 AS INVEST_ACT,
        T.$125 AS INVEST_FOREIGN,
        T.$126 AS INVEST_MONEY_SEEKR,
        T.$127 AS INVEST_PERS,
        T.$128 AS INVEST_READ_FIN_NEWS,
        T.$129 AS INVEST_RL_EST,
        T.$130 AS INVEST_STOCKS,
        T.$131 AS KIDS_F_0_2,
        T.$132 AS KIDS_F_11_15,
        T.$133 AS KIDS_F_16_17,
        T.$134 AS KIDS_F_3_5,
        T.$135 AS KIDS_F_6_10,
        T.$136 AS KIDS_M_0_2,
        T.$137 AS KIDS_M_11_15,
        T.$138 AS KIDS_M_16_17,
        T.$139 AS KIDS_M_3_5,
        T.$140 AS KIDS_M_6_10,
        T.$141 AS KIDS_U_0_2,
        T.$142 AS KIDS_U_11_15,
        T.$143 AS KIDS_U_16_17,
        T.$144 AS KIDS_U_3_5,
        T.$145 AS KIDS_U_6_10,
        CAST(T.$146 AS NUMBER) AS LENGTH_OF_RESIDENCE,
        T.$147 AS MAGS,
        TO_TIMESTAMP(T.$148) AS MOTORCYCLE_DATE,
        T.$149 AS MOTORCYCLE_MODEL,
        T.$150 AS MOTORCYCLE_VIN,
        T.$151 AS MR_LENDR_CD,
        T.$152 AS MR_LOAN_TYP,
        T.$153 AS MR2_AMT,
        T.$154 AS MR2_LENDR,
        T.$155 AS MR2_LENDR_CD,
        T.$156 AS MR2_LOAN_TYP,
        T.$157 AS MR2_RATE_TYP,
        T.$158 AS NAME_SUFFIX,
        T.$159 AS NUM_ADULTS,
        T.$160 AS NUM_KIDS,
        T.$161 AS OCC_AFRIC_AMER_PROF,
        T.$162 AS OCC_BUSN_OWNR,
        T.$163 AS OCC_HOME_OFF,
        T.$164 AS OCC_SOHO_IND,
        T.$165 AS OCC_WORKING_WMN,
        TO_TIMESTAMP(T.$166) AS OPTIN_DATE,
        T.$167 AS P2_AMT,
        T.$168 AS P2_LOAN_TYP,
        T.$169 AS P2_RATE_TYP,
        T.$170 AS PARTY_AFFILIATION,
        T.$171 AS PAYDAY_EMPLOYER_NAME,
        T.$172 AS PAYDAY_EMPLOYMENT_STATUS,
        T.$173 AS PAYDAY_FLAG,
        T.$174 AS PAYDAY_LOAN_REQUESTED_AMT,
        T.$175 AS PAYDAY_MILITARY_FLAG,
        T.$176 AS PAYDAY_OCCUPATION,
        T.$177 AS PRES_KIDS,
        T.$178 AS PROP_AC,
        T.$179 AS PROP_FUEL,
        T.$180 AS PROP_POOL,
        T.$181 AS PROP_SEWER,
        T.$182 AS PROP_TYPE,
        T.$183 AS PROP_WATER,
        T.$184 AS SINGLE_PARENT,
        T.$185 AS SR_ADULT_IN_HH,
        T.$186 AS STATE,
        T.$187 AS URL,
        T.$188 AS VET_IN_HH,
        T.$189 AS WALK_SEQUENCE_CODE,
        T.$190 AS YOUNG_ADULT_IN_HH,
        T.$191 AS ZIP,
        T.$192 AS ZIP4, 
        T.$193 AS PERSONAL_PHONE_DNC_FLAG,
        T.$194 AS MOBILE_PHONE_DNC_FLAG,
        T.$195 AS UP_ID
        FROM @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/consumer_b2c_full AS T;
    );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.B2B_EXPORT_TROVO:
-- CREATE OR REPLACE TABLE AUDIENCELAB_INTERNAL_PROD.PUBLIC.B2B_EXPORT_TROVO (
-- 	ID NUMBER(38,0),
-- 	FIRST_NAME VARCHAR(16777216),
-- 	LAST_NAME VARCHAR(16777216),
-- 	BUSINESS_EMAIL VARCHAR(16777216),
-- 	SHA256_BUSINESS_EMAIL VARCHAR(16777216),
-- 	PROGRAMMATIC_BUSINESS_EMAILS VARCHAR(16777216),
-- 	PERSONAL_EMAIL VARCHAR(16777216),
-- 	SHA256_PERSONAL_EMAIL VARCHAR(16777216),
-- 	JOB_TITLE VARCHAR(16777216),
-- 	SENIORITY_LEVEL VARCHAR(16777216),
-- 	DEPARTMENT VARCHAR(16777216),
-- 	MOBILE_PHONE VARCHAR(16777216),
-- 	DIRECT_NUMBER VARCHAR(16777216),
-- 	LINKEDIN_URL VARCHAR(16777216),
-- 	PERSONAL_ADDRESS VARCHAR(16777216),
-- 	PERSONAL_ADDRESS_2 VARCHAR(16777216),
-- 	PERSONAL_CITY VARCHAR(16777216),
-- 	PERSONAL_STATE VARCHAR(16777216),
-- 	PERSONAL_ZIP VARCHAR(16777216),
-- 	PERSONAL_ZIP4 VARCHAR(16777216),
-- 	PROFESSIONAL_ADDRESS VARCHAR(16777216),
-- 	PROFESSIONAL_ADDRESS_2 VARCHAR(16777216),
-- 	PROFESSIONAL_CITY VARCHAR(16777216),
-- 	PROFESSIONAL_STATE VARCHAR(16777216),
-- 	PROFESSIONAL_ZIP VARCHAR(16777216),
-- 	PROFESSIONAL_ZIP4 VARCHAR(16777216),
-- 	COMPANY_NAME VARCHAR(16777216),
-- 	COMPANY_DOMAIN VARCHAR(16777216),
-- 	COMPANY_PHONE VARCHAR(16777216),
-- 	PRIMARY_INDUSTRY VARCHAR(16777216),
-- 	COMPANY_SIC VARCHAR(16777216),
-- 	COMPANY_NAICS VARCHAR(16777216),
-- 	COMPANY_ADDRESS VARCHAR(16777216),
-- 	COMPANY_ADDRESS_2 VARCHAR(16777216),
-- 	COMPANY_CITY VARCHAR(16777216),
-- 	COMPANY_STATE VARCHAR(16777216),
-- 	COMPANY_ZIP VARCHAR(16777216),
-- 	COMPANY_ZIP4 VARCHAR(16777216),
-- 	COMPANY_LINKEDIN_URL VARCHAR(16777216),
-- 	COMPANY_REVENUE VARCHAR(16777216),
-- 	COMPANY_EMPLOYEE_COUNT VARCHAR(16777216),
-- 	BUSINESS_EMAIL_VALIDATION_STATUS VARCHAR(16777216),
-- 	BUSINESS_EMAIL_LAST_SEEN TIMESTAMP_NTZ(9),
-- 	COMPANY_LAST_UPDATED TIMESTAMP_NTZ(9),
-- 	JOB_TITLE_LAST_UPDATED TIMESTAMP_NTZ(9),
-- 	LAST_UPDATED TIMESTAMP_NTZ(9)
-- );

-- Fill AUDIENCELAB_INTERNAL_PROD.PUBLIC.B2B_EXPORT_TROVO with data:
    COPY INTO AUDIENCELAB_INTERNAL_PROD.PUBLIC.B2B_EXPORT_TROVO
    FROM
    (
    SELECT 
    CAST(T.$1 AS NUMBER) AS ID,
    T.$2 AS FIRST_NAME,
    T.$3 AS LAST_NAME,
    T.$4 AS BUSINESS_EMAIL,
    T.$5 AS SHA256_BUSINESS_EMAIL,
    T.$6 AS PROGRAMMATIC_BUSINESS_EMAILS,
    T.$7 AS PERSONAL_EMAIL,
    T.$8 AS SHA256_PERSONAL_EMAIL,
    T.$9 AS JOB_TITLE,
    T.$10 AS SENIORITY_LEVEL,
    T.$11 AS DEPARTMENT,
    T.$12 AS MOBILE_PHONE,
    T.$13 AS DIRECT_NUMBER,
    T.$14 AS LINKEDIN_URL,
    T.$15 AS PERSONAL_ADDRESS,
    T.$16 AS PERSONAL_ADDRESS_2,
    T.$17 AS PERSONAL_CITY,
    T.$18 AS PERSONAL_STATE,
    T.$19 AS PERSONAL_ZIP,
    T.$20 AS PERSONAL_ZIP4,
    T.$21 AS PROFESSIONAL_ADDRESS,
    T.$22 AS PROFESSIONAL_ADDRESS_2,
    T.$23 AS PROFESSIONAL_CITY,
    T.$24 AS PROFESSIONAL_STATE,
    T.$25 AS PROFESSIONAL_ZIP,
    T.$26 AS PROFESSIONAL_ZIP4,
    T.$27 AS COMPANY_NAME,
    T.$28 AS COMPANY_DOMAIN,
    T.$29 AS COMPANY_PHONE,
    T.$30 AS PRIMARY_INDUSTRY,
    T.$31 AS COMPANY_SIC,
    T.$32 AS COMPANY_NAICS,
    T.$33 AS COMPANY_ADDRESS,
    T.$34 AS COMPANY_ADDRESS_2,
    T.$35 AS COMPANY_CITY,
    T.$36 AS COMPANY_STATE,
    T.$37 AS COMPANY_ZIP,
    T.$38 AS COMPANY_ZIP4,
    T.$39 AS COMPANY_LINKEDIN_URL,
    T.$40 AS COMPANY_REVENUE,
    T.$41 AS COMPANY_EMPLOYEE_COUNT,
    T.$42 AS BUSINESS_EMAIL_VALIDATION_STATUS,
    TO_TIMESTAMP(T.$43) AS BUSINESS_EMAIL_LAST_SEEN,
    TO_TIMESTAMP(T.$44) AS COMPANY_LAST_UPDATED,
    TO_TIMESTAMP(T.$45) AS JOB_TITLE_LAST_UPDATED,
    TO_TIMESTAMP(T.$46) AS LAST_UPDATED
    FROM @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/b2b_export_trovo AS T;
    )


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.ST_CONSUMER:
--     CREATE OR REPLACE TABLE AUDIENCELAB_INTERNAL_PROD.PUBLIC.ST_CONSUMER CLUSTER BY (UTC_DATE)(
-- 	UTC_DATE DATE,
-- 	KEYWORD VARCHAR(16777216),
-- 	INDIVIDUALID ARRAY
-- );

-- Fill AUDIENCELAB_INTERNAL_PROD.PUBLIC.ST_CONSUMER with data:
    -- COPY INTO AUDIENCELAB_INTERNAL_PROD.PUBLIC.ST_CONSUMER 
    -- FROM (
    --     SELECT
    --     TO_DATE(T.$1) AS UTC_DATE,
    --     T.$2 AS KEYWORD,
    --     T.$3 AS INDIVIDUALID
    --     FROM @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/st_consumer AS T
    -- );

-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.KEYWORD_PLANNER Materialized View:
-- CREATE OR REPLACE MATERIALIZED VIEW AUDIENCELAB_INTERNAL_PROD.PUBLIC.KEYWORD_PLANNER(
-- 	UTC_DATE,
-- 	KEYWORD,
-- 	COUNT
-- ) CLUSTER BY (utc_date) as (
--     SELECT utc_date, keyword, ARRAY_SIZE(individualid) count FROM public.st_consumer
-- );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.PREMADE_TAXONOMY:
-- CREATE OR REPLACE TABLE AUDIENCELAB_INTERNAL_PROD.PUBLIC.PREMADE_TAXONOMY (
-- 	ID VARCHAR(16777216),
-- 	NAME VARCHAR(16777216)
-- );

-- Fill AUDIENCELAB_INTERNAL_PROD.PUBLIC.PREMADE_TAXONOMY with data:
-- COPY INTO AUDIENCELAB_INTERNAL_PROD.PUBLIC.PREMADE_TAXONOMY
-- FROM (
--     SELECT 
--     T.$1 AS ID,
--     T.$2 AS NAME
--     FROM @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/premade_taxonomy AS T
-- );


-- AUDIENCELAB_INTERNAL_PROD.PUBLIC.TROVO_FEED_RESOLVED (External Table, needs @AUDIENCELAB_INTERNAL_PROD.RAW_DATA.TROVO_ADSLAB_STAGE stage with this URL: s3://trovo-coop-adslab/outgoing/cookie_sync/resolved/):
    CREATE OR REPLACE EXTERNAL TABLE AUDIENCELAB_INTERNAL_PROD.RAW_DATA.TROVO_FEED_RESOLVED 
    (
    TROVO_ID VARCHAR(16777216) AS (CAST(GET(VALUE, 'TROVO_ID') AS VARCHAR(16777216))), 
    PARTNER_ID VARCHAR(16777216) AS (CAST(GET(VALUE, 'PARTNER_ID') AS VARCHAR(16777216))),
    PARTNER_UID VARCHAR(16777216) AS (CAST(GET(VALUE, 'PARTNER_UID') AS VARCHAR(16777216))), 
    SHA256_LOWER_CASE VARCHAR(16777216) AS (CAST(GET(VALUE, 'SHA256_LOWER_CASE') AS VARCHAR(16777216))), 
    IP VARCHAR(16777216) AS (CAST(GET(VALUE, 'IP') AS VARCHAR(16777216))), 
    JSON_HEADERS VARCHAR(16777216) AS (CAST(GET(VALUE, 'JSON_HEADERS') AS VARCHAR(16777216))), 
    EVENT_DATE TIMESTAMP_NTZ(9) AS (CAST(GET(VALUE, 'EVENT_DATE') AS TIMESTAMP_NTZ(9))), 
    INGESTION_TIMESTAMP TIMESTAMP_NTZ(9) AS (CAST(CONCAT(SUBSTR(METADATA$FILENAME, 33, 4), '-', SUBSTR(METADATA$FILENAME, 40, 2), '-', SUBSTR(METADATA$FILENAME, 45, 2), ' ', SUBSTR(METADATA$FILENAME, 50, 2), ':', SUBSTR(METADATA$FILENAME, 55, 2), ':0', SUBSTR(METADATA$FILENAME, 58, 1)) AS TIMESTAMP_NTZ(9))))
    LOCATION=@TROVO_ADSLAB_STAGE/cookie_sync/resolved/ 
    pattern='.*.parquet' 
    file_format=(TYPE=PARQUET NULL_IF=()) ;


-- Create and populate FOUR_EYES.PUBLIC.PREMADE_4EYES_LITE:
    CREATE OR REPLACE TRANSIENT TABLE FOUR_EYES.PUBLIC.PREMADE_4EYES_LITE
    AS 
    SELECT 
    TO_DATE(T.$1) AS DATE,
    T.$2 AS SEGMENT,
    T.$3 AS UP_ID
    FROM @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/premade_4eyes_lite AS T;


-- FOUR_EYES.PUBLIC.SHA_TO_UPS:
    CREATE OR REPLACE TRANSIENT TABLE FOUR_EYES.PUBLIC.SHA_TO_UPS (
	SHA256_LC_HEM VARCHAR(16777216),
	UP_IDS ARRAY
);

-- Fill FOUR_EYES.PUBLIC.SHA_TO_UPS with data:
    COPY INTO FOUR_EYES.PUBLIC.SHA_TO_UPS
    FROM (
        SELECT 
        T.$1 AS SHA256_LC_HEM,
        T.$2 AS UP_IDS
        FROM @FOUR_EYES.PUBLIC.AUDIENCELAB_BACKUP_STAGE/sha_to_ups AS T
    );

-- FOUR_EYES.PUBLIC.RAW_TOPICS:
    CREATE OR REPLACE TRANSIENT TABLE FOUR_EYES.PUBLIC.RAW_TOPICS (
	SHA256_LC_HEM VARCHAR(16777216),
	TOPIC VARCHAR(16777216),
	DATE DATE
);



-- 3) Set up the PIPES that were used with the previous account (we need "FOUR_EYES_STAGE_CSV" Stage):


    CREATE OR REPLACE PIPE FOUR_EYES.PUBLIC.CSV_PIPE 
    auto_ingest=true 
    AS COPY INTO FOUR_EYES.PUBLIC.RAW_TOPICS
    FROM (
        SELECT 
        T.$1 AS "SHA256_LC_HEM",
        T.$3 AS "TOPIC", -- changed, before it was T.$2
        TO_DATE(SUBSTR(METADATA$FILENAME, 10, 8), 'YYYYMMDD') AS DATE  -- Get the DATE Value
        FROM @FOUR_EYES.PUBLIC.FOUR_EYES_STAGE_CSV AS T
    );




-- 3.5) Set up the STREAMS that were used with the previous account:


CREATE OR REPLACE STREAM FOUR_EYES.PUBLIC.RAW_TOPICS_STREAM 
ON TABLE RAW_TOPICS 
append_only = true;



-- 3.6) Set up the PROCEDURES that were used with the previous account:

-- DELETE_OLD_DATA() procedure:
CREATE OR REPLACE PROCEDURE FOUR_EYES.PUBLIC.DELETE_OLD_DATA()
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS '
  var currentDate = new Date();
  var sevenDaysAgo = new Date();
  sevenDaysAgo.setDate(currentDate.getDate() - 7);

  var formattedDate = sevenDaysAgo.toISOString().split(''T'')[0];

  //return formattedDate;

  //var sql_command = `DELETE FROM FOUR_EYES.TEST.PREMADE_4EYES_TEST
   //             WHERE DATE < ''${formattedDate}''`

   //var sql_command = `SELECT COUNT(*) AS Row_Count FROM FOUR_EYES.PUBLIC.PREMADE_4EYES_LITE
    //            WHERE DATE < ''${formattedDate}''`;

   var sql_command = `DELETE FROM FOUR_EYES.PUBLIC.PREMADE_4EYES_LITE
                     WHERE DATE < ''${formattedDate}''`;

                     
  try {
    var stmt = snowflake.createStatement({sqlText: sql_command});
    var rs = stmt.execute();
   return ''Old data successfully deleted.'';

  //var row;
  //while (rs.next()) {
   // row = rs.getColumnValue(1);
  //}
  //return row;
  } catch (err) {
    return ''Error deleting old data: '' + err.message;
  }
';



-- 4) Set up the TASKS that were used with the previous account:



-- Raw_topics task:
CREATE OR REPLACE TASK FOUR_EYES.PUBLIC.RAW_TOPICS_TASK
    WAREHOUSE='DATALOADER'
    -- SCHEDULE='USING CRON 0 17 * * * America/Chicago'
    SCHEDULE='360 MINUTES'
    USER_TASK_TIMEOUT_MS=36000000
WHEN 
    SYSTEM$STREAM_HAS_DATA('FOUR_EYES.PUBLIC.RAW_TOPICS_STREAM')
    AS 
            BEGIN
-- Perform the join operation and insert into target table
            INSERT INTO FOUR_EYES.PUBLIC.PREMADE_4EYES_LITE ("DATE", "SEGMENT", "UP_ID")
            SELECT
                RT.DATE AS "DATE",
                RT.TOPIC AS "SEGMENT",
                F.value::string AS up_id
            FROM
                "FOUR_EYES"."PUBLIC"."RAW_TOPICS_STREAM" AS RT
            INNER JOIN
                "FOUR_EYES"."PUBLIC"."SHA_TO_UPS" AS SHA_TO_UPS
                ON SHA_TO_UPS."SHA256_LC_HEM" = RT."SHA256_LC_HEM"
            CROSS JOIN
                LATERAL FLATTEN(input => SHA_TO_UPS.UP_IDS) F;
END;

-- Start FOUR_EYES.PUBLIC.RAW_TOPICS_TASK:
ALTER TASK FOUR_EYES.PUBLIC.RAW_TOPICS_TASK RESUME;




-- Daily PREMADE_4EYES_LITE Delete Rows task (uses "DELETE_OLD_DATA()" task):
create or replace task FOUR_EYES.PUBLIC.DELETE_OLD_DATA_TASK
	warehouse=ANALYST_WH
	schedule='USING CRON 0 2 * * * America/Chicago'
	COMMENT='Task to delete data from PREMADE_4EYES_LITE table older than 7 days from the current runtime'
	as CALL FOUR_EYES.PUBLIC.DELETE_OLD_DATA();


-- Start FOUR_EYES.PUBLIC.DELETE_OLD_DATA_TASK:
ALTER TASK FOUR_EYES.PUBLIC.RAW_TOPICS_TASK RESUME;