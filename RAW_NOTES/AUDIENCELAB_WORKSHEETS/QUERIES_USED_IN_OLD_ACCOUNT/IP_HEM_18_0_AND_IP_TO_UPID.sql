
// 1) Create Transient Table for IP_HEM_1_8_0 file:
CREATE OR REPLACE TRANSIENT TABLE TROVO.PUBLIC.IP_HEM_1_8_0 (
    IP_ADRESS STRING,
    DISTRIBUTION_PERCENTAGE DECIMAL(10, 4),
    SHA256_LC_HEM STRING,
    HEM_COUNT NUMBER,
    HEM_ARRAY STRING
);


// 1.5) Disable Time-Travel
ALTER TABLE TROVO.PUBLIC.IP_HEM_1_8_0
SET DATA_RETENTION_TIME_IN_DAYS=0;

// 2) List Files in Stage, in  /outgoing/ip_to_hem_1_8_0/ folder:
LIST @AUDIENCELAB_INTERNAL_PROD.RAW_DATA.TROVO_ADSLAB_STAGE/ip_to_hem_1_8_0/;




// 3) Copy Files from IP_TO_HEM_1_8_0 Stage into IP_HEM_1_8_0 Table:
    COPY INTO TROVO.PUBLIC.IP_HEM_1_8_0 
    FROM (
    SELECT 
        T.$1 AS IP_ADDRESS,
        CAST(T.$2 AS DECIMAL(10, 4)) AS DISTRIBUTION_PERCENTAGE,
        T.$3 AS SHA256_LC_HEM,
        T.$4 AS HEM_COUNT,
        T.$5 AS HEM_ARRAY
    FROM @AUDIENCELAB_INTERNAL_PROD.RAW_DATA.TROVO_ADSLAB_STAGE/ip_to_hem_1_8_0/
    (FILE_FORMAT => TROVO.PUBLIC.B2C_FILE_FORMAT) T
    )
    ON_ERROR=CONTINUE;


//4) Create Transient Table for IP_TO_UPID (without HEM_ARRAY matching)
CREATE OR REPLACE TRANSIENT TABLE TROVO.PUBLIC.IP_TO_UPID
AS
SELECT
      IP_HEM."IP_ADRESS" AS "IP",
      IP_HEM."SHA256_LC_HEM" AS "SHA256",
      U_PERSON.UP_ID AS "UP_ID"
    FROM
      AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON AS "U_PERSON"
    INNER JOIN
      TROVO.PUBLIC.IP_HEM_1_8_0 AS "IP_HEM"
      ON IP_HEM."SHA256_LC_HEM" = U_PERSON."SHA256_PERSONAL_EMAIL";



//4) Create Transient Table for IP_TO_UPID_HEM_ARRAY_MATCH (with HEM_ARRAY matching)  ---- this table was too heavy/too slow to create, can't be used
//CREATE OR REPLACE TRANSIENT TABLE TROVO.PUBLIC.IP_TO_UPID_HEM_ARRAY_MATCH AS
//SELECT
//    IP_HEM."IP_ADRESS" AS "IP",
//    IP_HEM."SHA256_LC_HEM" AS "SHA256",
//    U_PERSON.UP_ID AS "UP_ID",
//    HEM_ARRAY_VALUE AS "HEM_VALUE"
//FROM
 //   AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON AS U_PERSON
//INNER JOIN
//    TROVO.PUBLIC.IP_HEM_1_8_0 AS IP_HEM
//ON ARRAY_CONTAINS(U_PERSON."SHA256_PERSONAL_EMAIL"::variant, STRTOK_TO_ARRAY(IP_HEM."HEM_ARRAY", ','))
//CROSS JOIN
//    TABLE(STRTOK_SPLIT_TO_TABLE(IP_HEM."HEM_ARRAY", ',')) AS HEM_ARRAY_VALUES(HEM_ARRAY_VALUE);




// amount: 203.010.716
SELECT COUNT(*) FROM TROVO.PUBLIC.IP_HEM_1_8_0;




// amount: 82.897.940 (a little less than half).
SELECT COUNT(*) FROM TROVO.PUBLIC.IP_HEM_1_8_0 WHERE DISTRIBUTION_PERCENTAGE >= 0.5;





// Use this table, instead, to create the IP_TO_UPID_HEM_ARRAY_MATCH
    CREATE OR REPLACE TRANSIENT TABLE TROVO.PUBLIC.IP_HEM_18_0_HEM_ARRAY_VERSION
    AS 
    SELECT
    IP_ADRESS AS "IP_ADRESS",
	DISTRIBUTION_PERCENTAGE AS "DISTRIBUTION_PERCENTAGE",
	SHA256_LC_HEM AS "SHA256_LC_HEM",
	HEM_COUNT AS "HEM_COUNT",
	STRTOK_TO_ARRAY(HEM_ARRAY, ',') AS "HEM_ARRAY"
    FROM TROVO.PUBLIC.IP_HEM_1_8_0;



SELECT * FROM TROVO.PUBLIC.IP_HEM_18_0_HEM_ARRAY_VERSION LIMIT 5;

    




// 85.619.250 rows
SELECT COUNT(*) FROM TROVO.PUBLIC.IP_TO_UPID;






SELECT * FROM TROVO.PUBLIC.IP_TO_UPID LIMIT 100;








// 5) Create Transient table for IP_TO_UPID_HEM_ARRAY_MATCH, but with only the IP_HEM_1_8_0 rows that have more than 0.5 percentage
//CREATE OR REPLACE TRANSIENT TABLE TROVO.PUBLIC.IP_TO_UPID_HEM_ARRAY_MATCH AS
    SELECT
    IP_HEM."IP_ADRESS" AS "IP",
    IP_HEM."SHA256_LC_HEM" AS "SHA256",
    U_PERSON.UP_ID AS "UP_ID"
FROM
    AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON AS U_PERSON
INNER JOIN
    TROVO.PUBLIC.IP_HEM_18_0_HEM_ARRAY_VERSION AS IP_HEM
ON ARRAY_CONTAINS(U_PERSON."SHA256_PERSONAL_EMAIL"::string, IP_HEM."HEM_ARRAY")
    AND IP_HEM.DISTRIBUTION_PERCENTAGE >= 0.5
//CROSS JOIN
//TABLE(STRTOK_SPLIT_TO_TABLE(IP_HEM."HEM_ARRAY", ',')) AS HEM_ARRAY_VALUES(HEM_ARRAY_VALUE)
WHERE
    IP_HEM.DISTRIBUTION_PERCENTAGE >= 0.5
LIMIT 100;




// 5.1) Create Test Schema: 
CREATE OR REPLACE TRANSIENT SCHEMA TROVO.TEST;




// 5.2) Create test version of IP_HEM_18_0_HEM_ARRAY_VERSION:
CREATE OR REPLACE TRANSIENT TABLE TROVO.TEST.IP_HEM_ARRAY_TEST
AS 
SELECT * FROM TROVO.PUBLIC.IP_HEM_18_0_HEM_ARRAY_VERSION SAMPLE ROW(5) SEED (82);



// 5.3) Create test version of UNIVERSAL_PERSON:
CREATE OR REPLACE TRANSIENT TABLE TROVO.TEST.UNIVERSAL_PERSON_TEST
AS
SELECT * FROM AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON SAMPLE ROW (5) SEED(82);


// 5.4) Create test version of normal IP_HEM_1_8_0 Table:
CREATE OR REPLACE TRANSIENT TABLE TROVO.TEST.IP_HEM_ARRAY_STRING_TEST
AS 
SELECT * FROM TROVO.PUBLIC.IP_HEM_1_8_0 SAMPLE ROW(5) SEED (82);



// 5.5) Test SELECT statement with TEST table:

    SELECT
    IP_HEM."IP_ADRESS" AS "IP",
    IP_HEM."SHA256_LC_HEM" AS "SHA256",
    U_PERSON.UP_ID AS "UP_ID"
FROM
    TROVO.TEST.UNIVERSAL_PERSON_TEST AS U_PERSON
INNER JOIN
    TROVO.TEST.IP_HEM_ARRAY_STRING_TEST AS IP_HEM
// this is bugged, and won't work
//ON ARRAY_CONTAINS(U_PERSON."SHA256_PERSONAL_EMAIL"::variant, IP_HEM."HEM_ARRAY")
ON IP_HEM.HEM_ARRAY LIKE CONCAT('%,', U_PERSON.SHA256_PERSONAL_EMAIL, ',%')
    AND IP_HEM.DISTRIBUTION_PERCENTAGE >= 0.5
WHERE
    IP_HEM.DISTRIBUTION_PERCENTAGE >= 0.5
LIMIT 100;
















// 6) Attempt to create the real table, with the expensive query:
CREATE OR REPLACE TRANSIENT TABLE TROVO.PUBLIC.IP_TO_UPID_ARRAY_MATCH
AS
    SELECT
    IP_HEM."IP_ADRESS" AS "IP",
    IP_HEM."SHA256_LC_HEM" AS "SHA256",
    U_PERSON.UP_ID AS "UP_ID",
    U_PERSON.SHA256_PERSONAL_EMAIL AS "SHA256_PERSONAL_EMAIL"
FROM
    AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON AS U_PERSON
INNER JOIN
    TROVO.PUBLIC.IP_HEM_1_8_0 AS IP_HEM
ON CONTAINS(IP_HEM.HEM_ARRAY, U_PERSON.SHA256_PERSONAL_EMAIL)
    AND IP_HEM.DISTRIBUTION_PERCENTAGE >= 0.5;











// Get sample data from sample tables:
SELECT * FROM IP_HEM_ARRAY_STRING_TEST LIMIT 500000;
SELECT * FROM UNIVERSAL_PERSON_TEST LIMIT 300000;






// Our current table has 85 million rows.


SELECT * FROM AUDIENCELAB_INTERNAL_PROD.PUBLIC.UNIVERSAL_PERSON LIMIT 3;


SELECT * FROM TROVO.PUBLIC.IP_HEM_1_8_0 LIMIT 3;



// Total count: 13.991.203.383   (13 billion hems)
SELECT SUM(HEM_COUNT) AS Total_Hem_Count
FROM TROVO.PUBLIC.IP_HEM_1_8_0;


// Total count: 224 million hems.
// Count of only rows with distribution_percentage >= 0.5: 224.263.589
SELECT SUM(HEM_COUNT) AS Total_Hem_Count
FROM TROVO.PUBLIC.IP_HEM_1_8_0
WHERE DISTRIBUTION_PERCENTAGE >= 0.5;
